Our Presentation

Intro
    Motivation
        Graphs
            Examples: Social Networks, Gene Expression N/w, ecology.
            Abstraction of real world phenomenon to graphs.
            Problems of graph theory, are hence applicable to any such graph.
            Visualization is important because: Formalism (in notation of set theory) v/s Visualization
                Formalism: It is general, abstract and complete.
                Visualization example: A particular example. Nevertheless, can give insights to the beginner.
    Aim
        Create computer animation and tasks to explain graph theory problems
        such as Graph Coloring, Graph Isomorphism, Max Cut.

        

Background
    Graph problems
        Short description of the follwing topics:
            Graph Isomorphism.
            Max 2 Cut
            Graph Coloring
            Minimum Vertex Cover
            Tree Width

    Prior work
            VisuAlgo (Vertex Cover) -- NSU
            AlgMatch -- Liams Work

            Difference: Our job was to explain the problem and not give solutions (algorithms).

Requirments
    Scope:
        Will not include algorithmic solutions.
    Must have requirements :

    The application must elucidate the Classical Graph Theory Problems by
    employing user interactive animations of their respective examples and for that

        1. Data structures which represent vertices, edges and graphs.
        2. Display the above entities as Scalar Vector Graphics on screen.
        3. Translation and shape transformation of the graphs for animation.
        4. Generation and handling of events triggered.
        5. Display appropriate text in synchronization with the animations and user interaction.
        

Design (Fig 5.1)
    Principles:
        Simplicity
        Intuitiveness

        General Layout (Picture of the rows and columns in the dissertation) Fig 5.1
        

Implementation
    Functional Programming in Elm.
        Show Messages as ADT. (Algebraic Data Type).
            Show the code of the ADT.


        Modules

    Show vector diagrams and a few topics which have animation. Fig 5.4
    Show the Graph isomorphism topic and max cut here.
        

Evaluation
    Concentrate on Tree width. How it's definition was not clear in
    the first iteration of the app. It belong to a different league.
    Praised that it could be explained at all.
    Critisized because the exact definition of didn't come right through.
        A few pages were added to show that a graph can be decomposed in more than one way.

        Show, tree width here.

Conclusion
    Future Work
        Capabities:
            Algorithms and solutions
            I/O: Define user instantiated graphs.
            Visualisation: 3D, Zoom, VR.
        Additon of Topics:
            May require enhancement of core functionality of the program.

        
    Reflections
